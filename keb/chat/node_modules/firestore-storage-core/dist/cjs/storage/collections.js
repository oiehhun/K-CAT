"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CollectionPath = void 0;
class CollectionPath {
    constructor(collectionName, idKey, parent) {
        this.collectionName = collectionName;
        this.idKey = idKey;
        this.parent = parent;
    }
    /**
     * @returns The path as a template. e.g. /accounts/{accountId}/users/{userId}
     */
    path() {
        return `${this.parent ? this.parent.path() : ''}/${this.collectionName}/{${this.idKey}}`;
    }
    /**
     * Generates the path to this collection
     * @param ids Ids of all parent documents
     */
    collection(ids) {
        return `${this.parent ? this.parent.doc(ids) : ''}/${this.collectionName}`;
    }
    /**
     * Generates the path to a single document in this collection
     * @param ids Ids of this document and all parent documents
     */
    doc(ids) {
        const id = ids[this.idKey];
        if (!id) {
            console.error(ids);
            throw new Error(`Missing ${this.idKey} in ids`);
        }
        return `${this.collection(ids)}/${id}`;
    }
    /**
     * Generates an id map for a document in this collection including all parent document ids
     * @param ids
     * @param docId
     */
    toDocIds(ids, docId) {
        return {
            ...ids,
            [this.idKey]: docId,
        };
    }
    parse(path) {
        const parts = path.split('/');
        // Remove optional first /
        if (parts[0] === '') {
            parts.splice(0, 1);
        }
        return this.extractId({}, parts);
    }
    extractId(map, path) {
        if (this.parent) {
            this.parent.extractId(map, path);
        }
        if (path[0] === this.collectionName && path[1] && typeof path[1] === 'string') {
            map[this.idKey] = path[1];
            path.splice(0, 2);
            return map;
        }
        throw new Error(`Unable to get id for ${this.collectionName} from ${path.join('/')}`);
    }
}
exports.CollectionPath = CollectionPath;
//# sourceMappingURL=collections.js.map