"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const should_1 = __importDefault(require("should"));
const collections_1 = require("./collections");
describe('CollectionPath', function () {
    const Accounts = new collections_1.CollectionPath('accounts', 'accountId');
    const Users = new collections_1.CollectionPath('users', 'userId', Accounts);
    it('should generate a path template', async () => {
        Users.path().should.eql('/accounts/{accountId}/users/{userId}');
    });
    it('should generate a collection path', async () => {
        Users.collection({ accountId: '1' }).should.eql('/accounts/1/users');
    });
    it('should generate a document path', async () => {
        Users.doc({ accountId: '1', userId: '2' }).should.eql('/accounts/1/users/2');
    });
    it('should generate a map of document ids', async () => {
        Users.toDocIds({ accountId: '1' }, '2').should.eql({
            accountId: '1',
            userId: '2',
        });
    });
    it('should get collection name', async () => {
        Users.collectionName.should.eql('users');
    });
    it('should parse a path and extract ids', async () => {
        Users.parse('/accounts/1/users/2').should.eql({
            accountId: '1',
            userId: '2',
        });
    });
    it('should fail to parse wrong paths', async () => {
        (0, should_1.default)(() => Users.parse('/accounts/1/users/')).throw();
        (0, should_1.default)(() => Users.parse('/accounts/1/')).throw();
        (0, should_1.default)(() => Users.parse('/users/1')).throw();
    });
});
//# sourceMappingURL=collections.test.js.map