{"version":3,"file":"query.js","sourceRoot":"","sources":["../../../src/storage/query.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AAIzC,MAAM,OAAgB,SAAS;IAI9B,KAAK,CAAC,IAAkB,EAAE,EAAM,EAAE,KAAU;QAC3C,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ,CAA0B,UAAoB;QACrD,IAAI,UAAU,EAAE;YACf,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAgB,CAAC;YACpD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;gBACjC,OAAO,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAW,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACpE,CAAC,EAAE,IAAI,CAAC,CAAC;SACT;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAES,YAAY,CAAC,IAAkB;QACxC,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,OAAO,IAAI,CAAC;QAC1C,OAAO,OAAO,CAAuB,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,CAAC,IAAkB,EAAE,KAAU;QACpC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAW,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;CACD","sourcesContent":["import { BaseModel, ModelQuery } from './types';\nimport { getPath } from 'ts-object-path';\n\nexport type WhereProp<T extends BaseModel> = string | ((t: T) => unknown);\n\nexport abstract class BaseQuery<T extends BaseModel, Op extends string, R> {\n\tprotected abstract applyWhere(key: string, operator: Op, value: any): this;\n\tabstract execute(): R;\n\n\twhere(prop: WhereProp<T>, op: Op, value: any) {\n\t\treturn this.applyWhere(this.getWhereProp(prop), op, value);\n\t}\n\n\twhereAll<K extends ModelQuery<T>>(attributes: K | null) {\n\t\tif (attributes) {\n\t\t\tconst keys = Object.keys(attributes) as (keyof K)[];\n\t\t\treturn keys.reduce((query, key) => {\n\t\t\t\treturn query.applyWhere(String(key), '==' as any, attributes[key]);\n\t\t\t}, this);\n\t\t}\n\t\treturn this;\n\t}\n\n\tprotected getWhereProp(prop: WhereProp<T>): string {\n\t\tif (typeof prop === 'string') return prop;\n\t\treturn getPath<T, (t: T) => unknown>(prop).join('.');\n\t}\n\n\tequals(prop: WhereProp<T>, value: any) {\n\t\treturn this.where(prop, '==' as any, value);\n\t}\n}\n"]}