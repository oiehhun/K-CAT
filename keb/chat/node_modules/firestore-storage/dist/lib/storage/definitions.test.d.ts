import { Timestamp } from '@google-cloud/firestore';
import { BaseRepository } from '../../lib';
import { BaseModel, CollectionPath, Id } from 'firestore-storage-core';
export interface Model extends BaseModel {
    details?: {
        field1?: {
            subField1?: string;
            subField2?: string;
        };
        field2?: string;
    };
    someIds?: string[];
    startTime?: Timestamp;
    endTime?: Timestamp;
}
declare const GenericModelPath: CollectionPath<"modelId", string, void>;
export declare class ModelRepository extends BaseRepository<Model, typeof GenericModelPath> {
}
export type AccountId = Id<'Account'>;
export type UserId = Id<'User'>;
export interface Account extends BaseModel {
    id: AccountId;
    name: string;
}
export interface User extends BaseModel {
    id: UserId;
    userName: string;
    lastSignIn?: Timestamp;
    address?: {
        street?: string;
        zip?: string;
        city?: string;
    };
}
export declare const AccountsPath: CollectionPath<"accountId", AccountId, void>;
export declare const UsersPath: CollectionPath<"userId", UserId, {
    accountId: AccountId;
}>;
export declare class AccountRepository extends BaseRepository<Account, typeof AccountsPath> {
}
export declare class UserRepository extends BaseRepository<User, typeof UsersPath> {
}
export {};
//# sourceMappingURL=definitions.test.d.ts.map